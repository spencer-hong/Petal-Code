{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 HelveticaNeue;\f4\fmodern\fcharset0 Courier;\f5\fnil\fcharset0 Georgia;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue0;
\red0\green0\blue0;\red0\green0\blue0;\red0\green0\blue0;\red239\green237\blue236;\red148\green108\blue71;
\red255\green255\blue255;\red255\green255\blue255;\red246\green246\blue239;\red26\green27\blue24;\red244\green0\blue95;
\red224\green213\blue97;\red27\green29\blue31;\red36\green38\blue41;\red235\green236\blue237;\red43\green39\blue19;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgray\c100000;\cssrgb\c0\c0\c0\c80000;
\cssrgb\c0\c0\c0\c4706;\csgray\c0;\cssrgb\c0\c0\c0;\cssrgb\c94902\c94510\c94118;\cssrgb\c65098\c49804\c34902;
\cssrgb\c100000\c100000\c100000\c49804;\cssrgb\c100000\c100000\c100000;\cssrgb\c97255\c97255\c94902;\cssrgb\c13725\c14118\c12157;\cssrgb\c97647\c14902\c44706;
\cssrgb\c90196\c85882\c45490;\cssrgb\c14118\c15294\c16078;\cssrgb\c18824\c20000\c21176;\cssrgb\c93725\c94118\c94510;\cssrgb\c22353\c20000\c9412;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf2 DONT give IAM access to the RPi\
they can see the certificate, and even the policy but it doesnt matter if they change the policy because they cant update it without aws cli and IAM access.\
they can change client id and thing name b/c of automatino\
so we hardcode the client id/thingName we chose for the device onto the policy instead of creating a policy that lets them publish/subscribe to any topic with their client id (which they can change)\
OR\
allow to only connect if certificate is for the thing they\'92re connecting from and then use variable $thingName everywhere\
\
\
on MASTER\
\
copy pi generic and rename to new pi<x>\
\
cd into it
\fs28 \
\
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
aws iot create-thing --thing-name pi<x>\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf2 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
aws iot create-keys-and-certificate --set-as-active --certificate-pem-outfile cert.pem --public-key-outfile publicKey.pem --private-key-outfile privkey.pem\
\
\pard\pardeftab720\sl360\partightenfactor0

\f2\b \cf2 IF
\f1\b0  ATTACHING sepcific policy (NOT OneDeviceGeneric) then \
\
aws iot create-policy --policy-name \'93<policyname>\'94 --policy-document file://<policyname>.json\
\pard\pardeftab720\sl440\sa400\partightenfactor0

\f3 \cf2 Paste your\'a0
\b certificate-arn
\b0 \'a0inside the following command before entering it:\
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 aws iot attach-principal-policy --principal "certificate-arn" --policy-name "<policyname>"\
\
\
\pard\pardeftab720\sl360\partightenfactor0

\f2\b \cf2 ELSE
\f1\b0 \
\pard\pardeftab720\sl440\partightenfactor0

\f3 \cf2 Paste your\'a0
\b certificate-arn
\b0 \'a0inside the following command before entering it:
\f1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 aws iot attach-principal-policy --principal "certificate-arn" --policy-name "OneDeviceGeneric"\
\
\pard\pardeftab720\sl360\partightenfactor0

\fs26 \cf2 aws iot attach-thing-principal --thing-name pi<x> --principal "certificate-arn"\
\
\
on DEVICE\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://medium.com/a-swift-misadventure/setup-your-raspberry-pi-2-3-with-raspbian-headless-without-cables-c78309fd7045"}}{\fldrslt 
\f4\fs28 \cf2 \kerning1\expnd0\expndtw0 https://medium.com/a-swift-misadventure/setup-your-raspberry-pi-2-3-with-raspbian-headless-without-cables-c78309fd7045}}
\f4\fs28 \kerning1\expnd0\expndtw0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.hackster.io/mariocannistra/python-and-paho-for-mqtt-with-aws-iot-921e41?ref=part&ref_id=13748&offset=12"}}{\fldrslt \cf2 \cb3 \CocoaLigature0 https://www.hackster.io/mariocannistra/python-and-paho-for-mqtt-with-aws-iot-921e41?ref=part&ref_id=13748&offset=12}}
\f1\fs26 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \
sudo raspi-config\
\
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf4 \cb5 sudo nano /etc/wpa_supplicant/wpa_supplicant.conf\
network=\{\cb1 \
\cb5     ssid="your-network-ssid-name"\cb1 \
\cb5     psk="your-network-password"\cb1 \
\cb5 \}\
\pard\pardeftab720\sl360\partightenfactor0

\fs26 \cf2 \cb1 sudo reboot\
\
ifconfig - take down ip\
\
scp 
\fs22 \cf6 \cb3 \kerning1\expnd0\expndtw0 \CocoaLigature0 -r pi6 pi@<ip>:\
\

\fs26 \cf2 \cb1 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
SCRIPT\
install pip\
	
\f4\fs28 \cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 sudo apt\cf9 \cb10 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 -\cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 get update\
\pard\pardeftab720\sl480\partightenfactor0

\f5\fs42 \cf4 \cb11 \shad0 sudo apt-get upgrade
\f4\fs28 \cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 \
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs26 \cf12 \cb13 \shad0 sudo apt-\cf14 get\cf12  dist-\cf14 upgrade\cf12 \
sudo apt-\cf15 get\cf12  install \cf14 python\cf12 -dev \
\pard\pardeftab720\sl360\partightenfactor0

\f4\fs28 \cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 \

\f1\fs26 \cf2 \cb1 \shad0 	
\f4\fs28 \cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 sudo apt\cf9 \cb10 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 -\cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 get install python3\cf9 \cb10 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 -\cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 pip\

\f1\fs26 \cf2 \cb1 \shad0 	
\f4\fs28 \cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 sudo apt\cf9 \cb10 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 -\cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 get install python\cf9 \cb10 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 -\cf7 \cb8 \shad\shadx0\shady-20\shadr0\shado255 \shadc2 pip\

\f1\fs26 \cf2 \cb1 \shad0 \
\pard\pardeftab720\sl360\partightenfactor0
\cf12 \cb13 sudo apt-\cf15 get\cf12  install git \
git clone https://github.\cf14 com\cf12 /adafruit/Adafruit_Python_DHT.git \
\cf14 cd\cf12  Adafruit_Python_DHT \
sudo \cf14 python\cf12  setup.\cf14 py\cf12  install \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb1 \
sudo pip install paho-mqtt
\fs27\fsmilli13600 \
\
\pard\pardeftab720\sl300\partightenfactor0

\fs26 \cf16 sudo pip install pytz\cf2 \
\
RUN SCRIPT\
{\field{\*\fldinst{HYPERLINK "https://askubuntu.com/questions/38661/how-do-i-run-sh-files"}}{\fldrslt https://askubuntu.com/questions/38661/how-do-i-run-sh-files}}\
\pard\pardeftab720\sl300\partightenfactor0
\cf17 \cb18 chmod +x /path/to/yourscript.sh\cf19 \
\cf17 ./yourscript.sh\cf19 \
}